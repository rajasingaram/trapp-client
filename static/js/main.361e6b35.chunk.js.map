{"version":3,"sources":["components/Header.jsx","store.js","context.js","components/APIKey.jsx","components/Stepper/StepperHeader.jsx","components/Stepper/StepperFooter.jsx","components/Stepper/StepperContent.jsx","components/Search/Search.jsx","components/Search/Result.jsx","components/ErrorMessage.jsx","components/Search/SearchContainer.jsx","serverCall.js","components/TeamSelection.jsx","components/InfoMessage.jsx","components/OwnerSelection.jsx","components/ReleaseSelection.jsx","components/TrelloJsonEntry.jsx","components/UploadConfirmation.jsx","components/TRStepper.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","initialState","currentState","stateList","id","text","apiKey","teamId","ownerId","releaseId","trelloJson","teams","reducer","state","action","type","localStorage","removeItem","payload","setItem","Object","objectSpread","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getItem","dispatch","setState","inherits","createClass","key","value","props","children","Component","Consumer","APIKey","localApiKey","error","onClick","e","apiKeyControl","trim","onEdit","handleInputChange","_this2","newLocal","role","index_es","icon","size","href","rel","target","_this2$state","disableButton","Fragment","placeholder","ref","input","onChange","aria-label","disabled","onNext","StepperHeader","headerText","defaultProps","StepperFooter","nextButtonDisabled","nextButtonText","previousButtonText","resetButtonText","onNextClick","onPreviousClick","onResetClick","StepperContent","Stepper_StepperHeader","Stepper_StepperFooter","isButtonDisabled","onPrevious","onReset","Search","handleKeyPress","event","searchTerm","searchControl","query","doSearch","_this$props","isSearchProgress","onKeyPress","aria-hidden","Result","selectedItem","results","i","map","item","isActive","styling","onSelected","name","ErrorMessage","message","SearchContainer","search","then","res","catch","components_Search_Search","components_ErrorMessage","Search_Result","onItemSelected","serverUrl","searchTeams","teamsUrl","Axios","get","headers","Content-Type","searchUsers","ownerUrl","bulkInsertStories","bulkInsertUrl","post","JSON","stringify","cache","redirect","referrer","TeamSelection","doTeamSearch","_callee","regenerator_default","wrap","_context","prev","next","abrupt","data","stop","onTeamSelection","team","store","selectedTeam","_this2$props","isTeamNotSelected","Stepper_StepperContent","Search_SearchContainer","defaultPropTypes","InfoMessage","OwnerSelection","doUserSearch","onOwnerSelection","owner","selectedOwner","teamMembers","members","isOwnerNotSelected","components_InfoMessage","ReleaseSelection","onReleaseSelection","release","selectedRelease","releaseList","releases","isReleaseNotSelected","TrelloJsonEntry","trelloJsonControl","saveTrelloJson","jsonStr","isJsonString","str","parse","exportTrelloJsonInstructions","isTrelloJsonEntered","rows","UploadConfirmation","uploadUserStories","userId","insertDescToAC","toggleActive","isUploadInprogress","response","err","console","onToggle","render","displayResponse","displaySelectInfo","class","createdStories","displayUserStories","errorStories","status","userStory","userStoryId","checked","htmlFor","TRStepper","currentStep","stepper","reset","Stepper","stepperContainer","linear","animation","to","preventDefault","stepHeader","step","index","data-target","onSubmit","components_APIKey","components_TeamSelection","previous","components_OwnerSelection","components_ReleaseSelection","components_TrelloJsonEntry","components_UploadConfirmation","App","context_Provider","components_TRStepper","Boolean","window","location","hostname","match","library","add","faSearch","faArrowCircleRight","faArrowCircleLeft","faPlusCircle","faPen","faCheckCircle","faUndoAlt","faExclamationTriangle","faInfoCircle","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.361e6b35.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container\">\r\n        <span className=\"navbar-brand mr-auto mr-lg-2\">T.R.App</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const initialState = {\r\n  currentState: 1,\r\n  stateList: [\r\n    {\r\n      id: 1,\r\n      text: \"Rally API Key\"\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Team\"\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Owner\"\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"Release\"\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"Trello JSON\"\r\n    },\r\n    {\r\n      id: 6,\r\n      text: \"Upload Stories\"\r\n    }\r\n  ],\r\n  apiKey: null,\r\n  teamId: null,\r\n  ownerId: null,\r\n  releaseId: null,\r\n  trelloJson: null,\r\n  teams: []\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"RESET\":\r\n      localStorage.removeItem(\"rallyApiKey\", action.payload);\r\n      return initialState;\r\n\r\n    case \"UPDATE_APIKEY\":\r\n      localStorage.setItem(\"rallyApiKey\", action.payload);\r\n      return {\r\n        ...initialState,\r\n        apiKey: action.payload\r\n      };\r\n\r\n    case \"UPDATE_TEAMS\":\r\n      return {\r\n        ...state,\r\n        teams: action.payload\r\n      };\r\n\r\n    case \"SELECT_TEAM\":\r\n      return {\r\n        ...state,\r\n        teamId: action.payload,\r\n        ownerId: null,\r\n        releaseId: null\r\n      };\r\n\r\n    case \"SELECT_OWNER\":\r\n      return {\r\n        ...state,\r\n        ownerId: action.payload\r\n      };\r\n\r\n    case \"SELECT_RELEASE\":\r\n      return {\r\n        ...state,\r\n        releaseId: action.payload\r\n      };\r\n\r\n    case \"UPDATE_JSON\":\r\n      return {\r\n        ...state,\r\n        trelloJson: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Context = React.createContext();\r\n","import React, { Component } from \"react\";\r\nimport { Context, reducer, initialState } from \"./store\";\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    ...initialState,\r\n    currentState: localStorage.getItem(\"rallyApiKey\") ? 2 : 1,\r\n    apiKey: localStorage.getItem(\"rallyApiKey\"),\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class APIKey extends Component {\r\n  state = {\r\n    localApiKey: \"\",\r\n    error: null\r\n  };\r\n\r\n  onClick = (dispatch, e) => {\r\n    let searchTerm = this.apiKeyControl.value;\r\n    if (searchTerm.trim()) {\r\n      dispatch({ type: \"UPDATE_APIKEY\", payload: this.apiKeyControl.value });\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a valid string\"\r\n      });\r\n    }\r\n  };\r\n\r\n  onEdit = (dispatch, e) => {\r\n    dispatch({ type: \"RESET\" });\r\n    this.setState({ localApiKey: \"\", error: null });\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      localApiKey: this.apiKeyControl.value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const newLocal = (\r\n      <div className=\"alert alert-info\" role=\"alert\">\r\n        <div className=\"text-uppercase font-weight-bold\">\r\n          <FontAwesomeIcon icon=\"info-circle\" size=\"lg\" className=\"mr-3\" />\r\n          How to retrieve API key from Rally?\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <ul>\r\n            <li>\r\n              Go to&nbsp;\r\n              <a\r\n                className=\"link font-italic font-weight-bold\"\r\n                href=\"https://rally1.rallydev.com/login/accounts/index.html#/keys\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\">\r\n                Rally API Keys\r\n              </a>\r\n              &nbsp;page.\r\n            </li>\r\n            <li>Click the 'Create New API Key Button'</li>\r\n            <li>Paste and submit your key below.</li>\r\n          </ul>\r\n        </div>\r\n        <p className=\"font-italic\">\r\n          NOTE: More info on{\" \"}\r\n          <a\r\n            className=\"link font-italic font-weight-bold\"\r\n            href=\"https://comm.support.ca.com/kb/how-to-create-an-api-key-for-agile-central/kb000010814\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">\r\n            how to create Rally API\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { apiKey, dispatch } = value;\r\n          const { localApiKey, error } = this.state;\r\n          const disableButton =\r\n            localApiKey === null || localApiKey.trim().length === 0;\r\n\r\n          return (\r\n            <div className=\"\">\r\n              <h6 className=\"border-bottom border-gray pb-2 mb-0\">\r\n                Enter Your Rally API Key\r\n              </h6>\r\n              <div className=\"my-3\">\r\n                {apiKey === null ? (\r\n                  <React.Fragment>\r\n                    {newLocal}\r\n                    <p className=\"font-italic\">\r\n                      Generate a Rally API key so that this application can\r\n                      create User Stories on your behalf.\r\n                    </p>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Rally API Key\"\r\n                      className={\"form-control\" + (error ? \" is-invalid\" : \"\")}\r\n                      ref={input => (this.apiKeyControl = input)}\r\n                      onChange={this.handleInputChange}\r\n                      aria-label=\"Rally API Key\"\r\n                    />\r\n                    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                    <button\r\n                      className=\"btn btn-primary mt-3\"\r\n                      disabled={disableButton}\r\n                      onClick={() => {\r\n                        this.onClick(dispatch);\r\n                        this.props.onNext();\r\n                      }}>\r\n                      <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n                      &nbsp; Next\r\n                    </button>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <div className=\"alert alert-dark clearfix\" role=\"alert\">\r\n                      <span className=\"font-weight-bold\">API Key: </span>\r\n                      {apiKey}{\" \"}\r\n                      <button\r\n                        className=\"btn btn-outline-primary float-right\"\r\n                        onClick={() => this.onEdit(dispatch)}>\r\n                        <FontAwesomeIcon icon=\"pen\" />\r\n                      </button>\r\n                    </div>\r\n                    <button\r\n                      className=\"btn btn-primary mt-3\"\r\n                      onClick={() => this.props.onNext()}>\r\n                      <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n                      &nbsp; Next\r\n                    </button>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nAPIKey.propTypes = {\r\n  onNext: PropTypes.func.isRequired\r\n};\r\n\r\nexport default APIKey;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StepperHeader = props => {\r\n  return (\r\n    <h4 className=\"border-bottom border-gray pb-2 mb-0\">{props.headerText}</h4>\r\n  );\r\n};\r\n\r\nStepperHeader.propTypes = {\r\n  headerText: PropTypes.string.isRequired\r\n};\r\n\r\nStepperHeader.defaultProps = {\r\n  headerText: \"Step Header Text\"\r\n};\r\n\r\nexport default StepperHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst StepperFooter = props => {\r\n  const {\r\n    nextButtonDisabled,\r\n    nextButtonText,\r\n    previousButtonText,\r\n    resetButtonText,\r\n    onNextClick,\r\n    onPreviousClick,\r\n    onResetClick\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <div className=\"float-left\">\r\n        <button\r\n          className=\"btn btn-secondary mt-3\"\r\n          onClick={() => onPreviousClick()}>\r\n          <FontAwesomeIcon icon=\"arrow-circle-left\" />\r\n          &nbsp; {previousButtonText}\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          disabled={nextButtonDisabled}\r\n          onClick={() => onNextClick()}>\r\n          <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n          &nbsp; {nextButtonText}\r\n        </button>\r\n      </div>\r\n      <div className=\"float-right\">\r\n        <button\r\n          className=\"btn btn-secondary mt-3 float-right\"\r\n          onClick={() => onResetClick()}>\r\n          <FontAwesomeIcon icon=\"undo-alt\" />\r\n          &nbsp; {resetButtonText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStepperFooter.propTypes = {\r\n  nextButtonDisabled: PropTypes.bool.isRequired,\r\n  nextButtonText: PropTypes.object,\r\n  previousButtonText: PropTypes.string,\r\n  resetButtonText: PropTypes.string,\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nStepperFooter.defaultProps = {\r\n  nextButtonDisabled: false,\r\n  nextButtonText: \"Next\",\r\n  previousButtonText: \"Previous\",\r\n  resetButtonText: \"Start Again\",\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default StepperFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperHeader from \"./StepperHeader\";\r\nimport StepperFooter from \"./StepperFooter\";\r\n\r\nconst StepperContent = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <StepperHeader headerText={props.headerText} />\r\n      <div className=\"my-3\">{props.children}</div>\r\n      <StepperFooter\r\n        nextButtonDisabled={props.isButtonDisabled}\r\n        nextButtonText={props.nextButtonText}\r\n        onNextClick={() => props.onNext()}\r\n        previousButtonText={props.previousButtonText}\r\n        onPreviousClick={() => props.onPrevious()}\r\n        resetButtonText={props.resetButtonText}\r\n        onResetClick={() => props.onReset()}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nStepperContent.propTypes = {\r\n  headerText: PropTypes.string.isRequired,\r\n  isButtonDisabled: PropTypes.bool.isRequired,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func,\r\n  onReset: PropTypes.func,\r\n  nextButtonText: PropTypes.object,\r\n  previousButtonText: PropTypes.string,\r\n  resetButtonText: PropTypes.string\r\n};\r\n\r\nStepperContent.defaultProps = {\r\n  isButtonDisabled: false,\r\n  nextButtonText: \"Next\",\r\n  previousButtonText: \"Previous\",\r\n  resetButtonText: \"Start Again\"\r\n};\r\n\r\nexport default StepperContent;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: this.props.searchTerm\r\n    };\r\n  }\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.onClick(event);\r\n    }\r\n  };\r\n\r\n  onClick = e => {\r\n    const searchTerm = this.searchControl.value;\r\n    if (searchTerm.trim()) {\r\n      this.setState({ query: searchTerm });\r\n      this.props.doSearch(searchTerm);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isSearchProgress, type } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"search\"\r\n          placeholder={\"Search for a \" + type}\r\n          className=\"form-control\"\r\n          aria-label=\"Search through Rally\"\r\n          ref={input => (this.searchControl = input)}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          {isSearchProgress ? (\r\n            <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n              <span\r\n                className=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              &nbsp;Loading...\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-primary btn-search\"\r\n              onClick={() => this.onClick(this.props.doSearch)}>\r\n              <FontAwesomeIcon icon=\"search\" />\r\n              &nbsp; Search\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  isSearchProgress: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const { selectedItem, results } = this.props;\r\n    let i = 1;\r\n    const mapResultItem = item => {\r\n      const isActive = selectedItem === item.ref;\r\n      let styling =\r\n        \"list-group-item list-group-item-action\" + (isActive ? \" active\" : \"\");\r\n\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={styling}\r\n          onClick={() => {\r\n            this.props.onSelected(item);\r\n          }}\r\n          key={item.ref + i++}>\r\n          {item.name}\r\n          {isActive ? (\r\n            <span className=\"d-inline-block ml-2\">\r\n              <FontAwesomeIcon icon=\"check-circle\" />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </button>\r\n      );\r\n    };\r\n\r\n    if (results) {\r\n      if (results && results.length) {\r\n        return (\r\n          <div className=\"mt-4\">\r\n            <div className=\"list-group\">{results.map(mapResultItem)}</div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"alert alert-dark mt-4\" role=\"alert\">\r\n            Please do a search to select a team\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return;\r\n  }\r\n}\r\n\r\nResult.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string,\r\n  results: PropTypes.array,\r\n  onSelected: PropTypes.func\r\n};\r\n\r\nResult.defaultProps = {\r\n  type: \"team\",\r\n  selectedItem: null,\r\n  results: [],\r\n  onSelected: () => {}\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ErrorMessage = props => {\r\n  return (\r\n    <div className={\"alert alert-danger \" + props.className} role=\"alert\">\r\n      <div className=\"row vertical-align\">\r\n        <div className=\"col-xs-1 text-center mx-2\">\r\n          <FontAwesomeIcon icon=\"exclamation-triangle\" size=\"lg\" />\r\n        </div>\r\n        <div className=\"col-xs-11 ml-2\">\r\n          <strong>Error:</strong> {props.message}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Search from \"./Search\";\r\nimport Result from \"./Result\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nclass SearchContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"\",\r\n      isSearchProgress: false,\r\n      results: props.results || [],\r\n      error: null\r\n    };\r\n  }\r\n\r\n  search = searchTerm => {\r\n    this.setState({\r\n      query: searchTerm,\r\n      isSearchProgress: true,\r\n      error: null\r\n    });\r\n\r\n    this.props\r\n      .doSearch(searchTerm)\r\n      .then(res => {\r\n        this.setState({\r\n          isSearchProgress: false,\r\n          results: res,\r\n          error: null\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isSearchProgress: false,\r\n          results: [],\r\n          error: error\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-container my-3\">\r\n        <Search\r\n          type={this.props.type}\r\n          searchTerm={this.state.query}\r\n          isSearchProgress={this.state.isSearchProgress}\r\n          doSearch={searchTerm => this.search(searchTerm)}\r\n        />\r\n        {this.state.error ? (\r\n          <ErrorMessage\r\n            message=\"Error while searching for the given team name. Try a different search term.\"\r\n            className=\"mt-3\"\r\n          />\r\n        ) : this.state.results.length ? (\r\n          <Result\r\n            key={\"results\" + this.key}\r\n            type={this.props.type}\r\n            selectedItem={this.props.selectedItem}\r\n            results={this.state.results}\r\n            onSelected={selectedItem => this.props.onItemSelected(selectedItem)}\r\n          />\r\n        ) : (\r\n          <ErrorMessage\r\n            message=\"No team found. Try a different search term.\"\r\n            className=\"mt-3\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nSearchContainer.defaultProps = {\r\n  type: \"team\"\r\n};\r\n\r\nexport default SearchContainer;\r\n","import Axios from \"axios\";\r\n\r\nconst serverUrl = \"https://5c9f5f3c-f925-43b8-8102-d8e834a9160a.mock.pstmn.io\";\r\n// const serverUrl = \"http://10.80.100.90:8080/\";\r\n\r\nexport const searchTeams = (searchTerm, apiKey) => {\r\n  const teamsUrl = `${serverUrl}/teams/${searchTerm}`;\r\n\r\n  return Axios.get(teamsUrl, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    }\r\n  });\r\n};\r\n\r\nexport const searchUsers = (searchTerm, apiKey) => {\r\n  const ownerUrl = `${serverUrl}/users?displayName=${searchTerm}`;\r\n\r\n  return Axios.get(ownerUrl, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    }\r\n  });\r\n};\r\n\r\nexport const bulkInsertStories = (message, apiKey) => {\r\n  const bulkInsertUrl = `${serverUrl}/userstories/bulkInsert`;\r\n\r\n  return Axios.post(bulkInsertUrl, JSON.stringify(message), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    },\r\n    cache: \"no-cache\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport SearchContainer from \"./Search/SearchContainer\";\r\nimport { searchTeams } from \"../serverCall\";\r\n\r\nclass TeamSelection extends Component {\r\n  doTeamSearch = async (searchTerm, apiKey, dispatch) => {\r\n    return searchTeams(searchTerm, apiKey)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        dispatch({ type: \"UPDATE_TEAMS\", payload: res });\r\n        return res;\r\n      });\r\n  };\r\n\r\n  onTeamSelection = (team, dispatch) => {\r\n    dispatch({ type: \"SELECT_TEAM\", payload: team });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { teamId: selectedTeam, dispatch } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const isTeamNotSelected = !(selectedTeam && selectedTeam.ref);\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Your Team\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isTeamNotSelected}>\r\n              <SearchContainer\r\n                key=\"team-search\"\r\n                selectedItem={isTeamNotSelected ? \"\" : selectedTeam.ref}\r\n                doSearch={searchTerm =>\r\n                  this.doTeamSearch(searchTerm, store.apiKey, store.dispatch)\r\n                }\r\n                onItemSelected={team => this.onTeamSelection(team, dispatch)}\r\n              />\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTeamSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nTeamSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default TeamSelection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst InfoMessage = props => {\r\n  return (\r\n    <div className={\"alert alert-warning \" + props.className} role=\"alert\">\r\n      <div className=\"row vertical-align\">\r\n        <div className=\"col-xs-1 text-center mx-2\">\r\n          <FontAwesomeIcon icon=\"info-circle\" size=\"lg\" />\r\n        </div>\r\n        <div className=\"col-xs-11 ml-2\">\r\n          <strong>Info:</strong> {props.message}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfoMessage.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default InfoMessage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport { searchUsers } from \"../serverCall\";\r\nimport Result from \"./Search/Result\";\r\nimport InfoMessage from \"./InfoMessage\";\r\n\r\nclass OwnerSelection extends Component {\r\n  doUserSearch = async (searchTerm, apiKey, dispatch) => {\r\n    return searchUsers(searchTerm, apiKey)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        dispatch({ type: \"UPDATE_USERS\", payload: res });\r\n      });\r\n  };\r\n\r\n  onOwnerSelection = (owner, dispatch) => {\r\n    dispatch({ type: \"SELECT_OWNER\", payload: owner });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            dispatch,\r\n            ownerId: selectedOwner,\r\n            teamId: selectedTeam\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const teamMembers = selectedTeam ? selectedTeam.members : [];\r\n          const isOwnerNotSelected = !(selectedOwner && selectedOwner.ref);\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Owner for User Stories\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isOwnerNotSelected}>\r\n              {teamMembers && teamMembers.length ? (\r\n                <Result\r\n                  results={teamMembers}\r\n                  selectedItem={isOwnerNotSelected ? \"\" : selectedOwner.ref}\r\n                  onSelected={item => this.onOwnerSelection(item, dispatch)}\r\n                />\r\n              ) : (\r\n                <InfoMessage\r\n                  message=\"The selected team does not contain any team members. Please add team members in Rally.\"\r\n                  className=\"mt-3\"\r\n                />\r\n              )}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nOwnerSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nOwnerSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default OwnerSelection;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport Result from \"./Search/Result\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport InfoMessage from \"./InfoMessage\";\r\n\r\nexport class ReleaseSelection extends Component {\r\n  onReleaseSelection = (release, dispatch) => {\r\n    dispatch({ type: \"SELECT_RELEASE\", payload: release });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            dispatch,\r\n            releaseId: selectedRelease,\r\n            teamId: selectedTeam\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const releaseList = selectedTeam ? selectedTeam.releases : [];\r\n          const isReleaseNotSelected = !(\r\n            selectedRelease && selectedRelease.ref\r\n          );\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Release for User Stories\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isReleaseNotSelected}>\r\n              {releaseList && releaseList.length ? (\r\n                <Result\r\n                  results={releaseList}\r\n                  selectedItem={isReleaseNotSelected ? \"\" : selectedRelease.ref}\r\n                  onSelected={item => this.onReleaseSelection(item, dispatch)}\r\n                />\r\n              ) : (\r\n                <InfoMessage\r\n                  message=\"The selected team does not contain any release planned. Please add planned releases in Rally.\"\r\n                  className=\"mt-3\"\r\n                />\r\n              )}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nReleaseSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nReleaseSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default ReleaseSelection;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class TrelloJsonEntry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      trelloJson: \"\",\r\n      error: null\r\n    };\r\n  }\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      trelloJson: this.trelloJsonControl.value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  saveTrelloJson = (dispatch, onNextClick) => {\r\n    let jsonStr = this.trelloJsonControl.value;\r\n\r\n    if (this.isJsonString(jsonStr)) {\r\n      dispatch({ type: \"UPDATE_JSON\", payload: jsonStr });\r\n      onNextClick();\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a valid JSON String\"\r\n      });\r\n    }\r\n  };\r\n\r\n  isJsonString = str => {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  exportTrelloJsonInstructions = () => {\r\n    return (\r\n      <div className=\"alert alert-info\" role=\"alert\">\r\n        <div className=\"text-uppercase font-weight-bold\">\r\n          <FontAwesomeIcon icon=\"info-circle\" size=\"lg\" className=\"mr-3\" />\r\n          How to Export Trello Board as JSON?\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <ul>\r\n            <li>\r\n              Open your Trello Board. Example&nbsp;\r\n              <a\r\n                className=\"link font-italic font-weight-bold\"\r\n                href=\"https://trello.com/b/GegkmZjO/rma-example-pip-board-v2\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\">\r\n                Sample Trello Board\r\n              </a>\r\n              &nbsp;to be used for this export function.\r\n            </li>\r\n            <li>\r\n              Click on the \"<span className=\"font-italic\">Show Menu</span>\" link\r\n              on the top right corner of your window.\r\n            </li>\r\n            <li>\r\n              Click on the \"<span className=\"font-italic\">More</span>\" link in\r\n              the first section of the right popup-pane.\r\n            </li>\r\n            <li>\r\n              Click on the \"\r\n              <span className=\"font-italic\">Print and Export</span>\" link in the\r\n              second section of the right popup-pane.\r\n            </li>\r\n            <li>\r\n              Click on the \"<span className=\"font-italic\">Export as JSON</span>\"\r\n              link in the modal popup on the right popup-pane.\r\n            </li>\r\n            <li>The window will be reloaded to show the JSON data.</li>\r\n            <li>Copy the entire JSON and paste it to the below textbox.</li>\r\n          </ul>\r\n        </div>\r\n        <p className=\"font-italic\">\r\n          NOTE: Do not format the JSON copied from the Trello Window.\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { dispatch } = store;\r\n          const { trelloJson, error } = this.state;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const isTrelloJsonEntered =\r\n            trelloJson === null || trelloJson.trim().length === 0;\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Enter Trello JSON Data\"\r\n              onNext={() => this.saveTrelloJson(dispatch, onNextClick)}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isTrelloJsonEntered}>\r\n              {this.exportTrelloJsonInstructions()}\r\n\r\n              <textarea\r\n                placeholder=\"Enter JSON Data from Trello\"\r\n                className={\"form-control\" + (error ? \" is-invalid\" : \"\")}\r\n                rows=\"10\"\r\n                ref={input => (this.trelloJsonControl = input)}\r\n                onChange={this.handleInputChange}\r\n                aria-label=\"Trello JSON\"\r\n              />\r\n              {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTrelloJsonEntry.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nTrelloJsonEntry.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default TrelloJsonEntry;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport { bulkInsertStories } from \"../serverCall\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nexport class UploadConfirmation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      toggleActive: false,\r\n      isUploadInprogress: false,\r\n      response: null,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  uploadUserStories = store => {\r\n    const {\r\n      apiKey,\r\n      teamId: selectedTeam,\r\n      ownerId: selectedOwner,\r\n      releaseId: selectedRelease,\r\n      trelloJson\r\n    } = store;\r\n\r\n    const message = {\r\n      teamId: selectedTeam.ref,\r\n      userId: selectedOwner.ref,\r\n      releaseId: selectedRelease.ref,\r\n      trelloJson: trelloJson,\r\n      insertDescToAC: this.state.toggleActive\r\n    };\r\n\r\n    this.setState({\r\n      isUploadInprogress: true,\r\n      response: null,\r\n      error: null\r\n    });\r\n\r\n    bulkInsertStories(message, apiKey)\r\n      .then(res => res.data)\r\n      .then(res =>\r\n        this.setState({\r\n          isUploadInprogress: false,\r\n          response: res,\r\n          error: null\r\n        })\r\n      )\r\n      .catch(err => {\r\n        console.error(err.response);\r\n        this.setState({\r\n          isUploadInprogress: false,\r\n          response: null,\r\n          error: JSON.stringify(err.response.data)\r\n        });\r\n      });\r\n  };\r\n\r\n  onToggle = () => {\r\n    this.setState({ toggleActive: !this.state.toggleActive });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            teamId: selectedTeam,\r\n            ownerId: selectedOwner,\r\n            releaseId: selectedRelease\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n\r\n          const buttonText = () => {\r\n            if (this.state.isUploadInprogress) {\r\n              return (\r\n                <React.Fragment>\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  &nbsp;Loading...\r\n                </React.Fragment>\r\n              );\r\n            } else {\r\n              return \"Import User Stories\";\r\n            }\r\n          };\r\n\r\n          const isButtonDisabled =\r\n            this.state.isUploadInprogress || this.state.response !== null;\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Confirm Information and Upload User Stories\"\r\n              onNext={() => {\r\n                this.uploadUserStories(store);\r\n                onNextClick();\r\n              }}\r\n              nextButtonText={buttonText()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isButtonDisabled}>\r\n              {this.state.error ? (\r\n                <ErrorMessage message=\"Error while importing stories into Rally. Please verify the JSON copied from Trello Board.\" />\r\n              ) : this.state.response ? (\r\n                this.displayResponse(this.state.response)\r\n              ) : (\r\n                this.displaySelectInfo(\r\n                  selectedTeam,\r\n                  selectedOwner,\r\n                  selectedRelease\r\n                )\r\n              )}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  };\r\n\r\n  displayResponse = response => {\r\n    return (\r\n      <div className=\"alert alert-success\" role=\"alert\">\r\n        <div className=\"row vertical-align\">\r\n          <div className=\"col-xs-1 text-center mx-2\">\r\n            <FontAwesomeIcon icon=\"check-circle\" size=\"lg\" />\r\n          </div>\r\n          <div class=\"col-xs-11 ml-2\">\r\n            <strong>Success:</strong> Imported the following stories into Rally.\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"my-3 p-3\">\r\n          {response.createdStories && (\r\n            <ul className=\"list-group\">\r\n              {response.createdStories.map(item =>\r\n                this.displayUserStories(\"success\", item)\r\n              )}\r\n            </ul>\r\n          )}\r\n\r\n          {response.errorStories && (\r\n            <ul className=\"list-group\">\r\n              {response.errorStories.map(item =>\r\n                this.displayUserStories(\"danger\", item)\r\n              )}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayUserStories = (status, userStory) => {\r\n    return (\r\n      <li\r\n        className={\"list-group-item list-group-item-\" + status}\r\n        key={userStory.userStoryId}>\r\n        {userStory.userStoryId + \" - \" + userStory.name}\r\n      </li>\r\n    );\r\n  };\r\n\r\n  displaySelectInfo = (selectedTeam, selectedOwner, selectedRelease) => {\r\n    return (\r\n      <div className=\"my-3 p-3\">\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Team:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedTeam ? selectedTeam.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Owner:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedOwner ? selectedOwner.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Release:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedRelease ? selectedRelease.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Add the trello card description to Acceptance Criteria :{\" \"}\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox inline-block mx-2 \">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n              checked={this.state.toggleActive}\r\n              onChange={() => this.onToggle()}\r\n            />\r\n            <label class=\"custom-control-label\" htmlFor=\"customCheck1\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nUploadConfirmation.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nUploadConfirmation.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default UploadConfirmation;\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"bs-stepper\";\r\nimport { Consumer } from \"../context\";\r\nimport APIKey from \"./APIKey\";\r\nimport TeamSelection from \"./TeamSelection\";\r\nimport OwnerSelection from \"./OwnerSelection\";\r\nimport ReleaseSelection from \"./ReleaseSelection\";\r\nimport TrelloJsonEntry from \"./TrelloJsonEntry\";\r\nimport UploadConfirmation from \"./UploadConfirmation\";\r\n\r\nexport class TRStepper extends Component {\r\n  currentStep = 1;\r\n\r\n  componentDidMount() {\r\n    this.stepper = new Stepper(this.stepperContainer, {\r\n      linear: true,\r\n      animation: true\r\n    });\r\n\r\n    this.stepper.to(this.currentStep);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onReset = dispatch => {\r\n    dispatch({ type: \"RESET\" });\r\n    this.stepper.reset();\r\n  };\r\n\r\n  render() {\r\n    const stepHeader = (step, index) => {\r\n      const target = `#test-l-${step.id}`;\r\n\r\n      return (\r\n        <React.Fragment key={target}>\r\n          {index > 0 ? <div className=\"line\" /> : \"\"}\r\n          <div className=\"step\" data-target={target}>\r\n            <button className=\"step-trigger\">\r\n              <span className=\"bs-stepper-circle\">{step.id}</span>\r\n              <span className=\"bs-stepper-label\">{step.text}</span>\r\n            </button>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { stateList, currentState, dispatch } = store;\r\n          this.currentStep = currentState;\r\n\r\n          return (\r\n            <div\r\n              id=\"stepper1\"\r\n              className=\"bs-stepper mt-3\"\r\n              ref={input => (this.stepperContainer = input)}>\r\n              <div className=\"bs-stepper-header  rounded shadow-sm\">\r\n                {stateList.map(stepHeader)}\r\n              </div>\r\n              <div className=\"bs-stepper-content my-4 p-3  rounded shadow-sm \">\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div id=\"test-l-1\" className=\"content\">\r\n                    <APIKey onNext={() => this.stepper.next()} />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-2\" className=\"content\">\r\n                    <TeamSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-3\" className=\"content\">\r\n                    <OwnerSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-4\" className=\"content\">\r\n                    <ReleaseSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-5\" className=\"content\">\r\n                    <TrelloJsonEntry\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-6\" className=\"content\">\r\n                    <UploadConfirmation\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TRStepper;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Provider } from \"./context\";\nimport TRStepper from \"./components/TRStepper\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bs-stepper/dist/css/bs-stepper.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <div className=\"App\">\n          <Header />\n          <div role=\"main\" className=\"container\">\n            <TRStepper />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faSearch,\n  faArrowCircleRight,\n  faArrowCircleLeft,\n  faPlusCircle,\n  faPen,\n  faCheckCircle,\n  faUndoAlt,\n  faExclamationTriangle,\n  faInfoCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faSearch,\n  faArrowCircleRight,\n  faArrowCircleLeft,\n  faPlusCircle,\n  faPen,\n  faCheckCircle,\n  faUndoAlt,\n  faExclamationTriangle,\n  faInfoCircle\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}