{"version":3,"sources":["components/Header.jsx","store.js","context.js","components/APIKey.jsx","components/Stepper/StepperHeader.jsx","components/Stepper/StepperFooter.jsx","components/Stepper/StepperContent.jsx","components/Search/Search.jsx","components/Search/Result.jsx","components/Search/SearchContainer.jsx","serverCall.js","components/TeamSelection.jsx","components/OwnerSelection.jsx","components/ReleaseSelection.jsx","components/TrelloJsonEntry.jsx","components/UploadConfirmation.jsx","components/TRStepper.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","initialState","currentState","stateList","id","text","apiKey","teamId","ownerId","releaseId","trelloJson","teams","reducer","state","action","type","localStorage","removeItem","payload","setItem","Object","objectSpread","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getItem","dispatch","setState","inherits","createClass","key","value","props","children","Component","Consumer","APIKey","localApiKey","error","onClick","e","apiKeyControl","trim","onEdit","handleInputChange","_this2","newLocal","role","href","rel","target","_this2$state","disableButton","Fragment","placeholder","ref","input","onChange","aria-label","disabled","onNext","index_es","icon","StepperHeader","headerText","defaultProps","StepperFooter","nextButtonDisabled","nextButtonText","previousButtonText","resetButtonText","onNextClick","onPreviousClick","onResetClick","StepperContent","Stepper_StepperHeader","Stepper_StepperFooter","isButtonDisabled","onPrevious","onReset","Search","searchTerm","searchControl","query","doSearch","_this$props","isSearchProgress","aria-hidden","Result","selectedItem","results","i","map","item","isActive","styling","onSelected","name","SearchContainer","search","then","res","catch","components_Search_Search","Search_Result","onItemSelected","serverUrl","searchTeams","teamsUrl","Axios","get","headers","Content-Type","searchUsers","ownerUrl","bulkInsertStories","message","bulkInsertUrl","post","JSON","stringify","cache","redirect","referrer","TeamSelection","doTeamSearch","_callee","regenerator_default","wrap","_context","prev","next","abrupt","data","stop","onTeamSelection","team","store","selectedTeam","_this2$props","isTeamNotSelected","Stepper_StepperContent","Search_SearchContainer","defaultPropTypes","OwnerSelection","doUserSearch","onOwnerSelection","owner","selectedOwner","teamMembers","members","isOwnerNotSelected","ReleaseSelection","onReleaseSelection","release","selectedRelease","releaseList","releases","isReleaseNotSelected","TrelloJsonEntry","trelloJsonControl","saveTrelloJson","jsonStr","isJsonString","str","parse","isTrelloJsonEntered","rows","UploadConfirmation","uploadUserStories","userId","isUploadInprogress","response","err","render","displayErrorMessage","displayResponse","displaySelectInfo","createdStories","displayUserStories","errorStories","status","userStory","userStoryId","TRStepper","currentStep","stepper","reset","Stepper","stepperContainer","linear","animation","to","preventDefault","stepHeader","step","index","data-target","onSubmit","components_APIKey","components_TeamSelection","previous","components_OwnerSelection","components_ReleaseSelection","components_TrelloJsonEntry","components_UploadConfirmation","App","context_Provider","components_TRStepper","Boolean","window","location","hostname","match","library","add","faSearch","faArrowCircleRight","faArrowCircleLeft","faPlusCircle","faPen","faCheckCircle","faUndoAlt","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b10a20c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container\">\r\n        <span className=\"navbar-brand mr-auto mr-lg-2\">T.R.App</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const initialState = {\r\n  currentState: 1,\r\n  stateList: [\r\n    {\r\n      id: 1,\r\n      text: \"Rally API Key\"\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Team\"\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Owner\"\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"Release\"\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"Trello JSON\"\r\n    },\r\n    {\r\n      id: 6,\r\n      text: \"Upload Stories\"\r\n    }\r\n  ],\r\n  apiKey: null,\r\n  teamId: null,\r\n  ownerId: null,\r\n  releaseId: null,\r\n  trelloJson: null,\r\n  teams: []\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"RESET\":\r\n      localStorage.removeItem(\"rallyApiKey\", action.payload);\r\n      return initialState;\r\n\r\n    case \"UPDATE_APIKEY\":\r\n      localStorage.setItem(\"rallyApiKey\", action.payload);\r\n      return {\r\n        ...initialState,\r\n        apiKey: action.payload\r\n      };\r\n\r\n    case \"UPDATE_TEAMS\":\r\n      return {\r\n        ...state,\r\n        teams: action.payload\r\n      };\r\n\r\n    case \"SELECT_TEAM\":\r\n      return {\r\n        ...state,\r\n        teamId: action.payload,\r\n        ownerId: null,\r\n        releaseId: null\r\n      };\r\n\r\n    case \"SELECT_OWNER\":\r\n      return {\r\n        ...state,\r\n        ownerId: action.payload\r\n      };\r\n\r\n    case \"SELECT_RELEASE\":\r\n      return {\r\n        ...state,\r\n        releaseId: action.payload\r\n      };\r\n\r\n    case \"UPDATE_JSON\":\r\n      return {\r\n        ...state,\r\n        trelloJson: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Context = React.createContext();\r\n","import React, { Component } from \"react\";\r\nimport { Context, reducer, initialState } from \"./store\";\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    ...initialState,\r\n    currentState: localStorage.getItem(\"rallyApiKey\") ? 2 : 1,\r\n    apiKey: localStorage.getItem(\"rallyApiKey\"),\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class APIKey extends Component {\r\n  state = {\r\n    localApiKey: \"\",\r\n    error: null\r\n  };\r\n\r\n  onClick = (dispatch, e) => {\r\n    let searchTerm = this.apiKeyControl.value;\r\n    if (searchTerm.trim()) {\r\n      dispatch({ type: \"UPDATE_APIKEY\", payload: this.apiKeyControl.value });\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a valid string\"\r\n      });\r\n    }\r\n  };\r\n\r\n  onEdit = (dispatch, e) => {\r\n    dispatch({ type: \"RESET\" });\r\n    this.setState({ localApiKey: \"\", error: null });\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      localApiKey: this.apiKeyControl.value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const newLocal = (\r\n      <div className=\"alert alert-warning\" role=\"alert\">\r\n        <div className=\"text-uppercase font-weight-bold\">\r\n          How to retrieve API key from Rally?\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <ul>\r\n            <li>\r\n              Go to&nbsp;\r\n              <a\r\n                className=\"alert-link\"\r\n                href=\"https://rally1.rallydev.com/login/accounts/index.html#/keys\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\">\r\n                Rally API Keys\r\n              </a>\r\n              .\r\n            </li>\r\n            <li>Click the 'Create New API Key Button'</li>\r\n            <li>Paste and submit your key below.</li>\r\n          </ul>\r\n        </div>\r\n        <p className=\"font-italic\">\r\n          NOTE: More info on{\" \"}\r\n          <a\r\n            className=\"alert-link\"\r\n            href=\"https://comm.support.ca.com/kb/how-to-create-an-api-key-for-agile-central/kb000010814\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">\r\n            how to create Rally API\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { apiKey, dispatch } = value;\r\n          const { localApiKey, error } = this.state;\r\n          const disableButton =\r\n            localApiKey === null || localApiKey.trim().length === 0;\r\n\r\n          return (\r\n            <div className=\"\">\r\n              <h6 className=\"border-bottom border-gray pb-2 mb-0\">\r\n                Enter Your Rally API Key\r\n              </h6>\r\n              <div className=\"my-3\">\r\n                {apiKey === null ? (\r\n                  <React.Fragment>\r\n                    {newLocal}\r\n                    <p className=\"font-italic\">\r\n                      Generate a Rally API key so that this application can\r\n                      create User Stories on your behalf.\r\n                    </p>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Rally API Key\"\r\n                      className={\"form-control\" + (error ? \" is-invalid\" : \"\")}\r\n                      ref={input => (this.apiKeyControl = input)}\r\n                      onChange={this.handleInputChange}\r\n                      aria-label=\"Rally API Key\"\r\n                    />\r\n                    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                    <button\r\n                      className=\"btn btn-primary mt-3\"\r\n                      disabled={disableButton}\r\n                      onClick={() => {\r\n                        this.onClick(dispatch);\r\n                        this.props.onNext();\r\n                      }}>\r\n                      <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n                      &nbsp; Next\r\n                    </button>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <div className=\"alert alert-dark clearfix\" role=\"alert\">\r\n                      <span className=\"font-weight-bold\">API Key: </span>\r\n                      {apiKey}{\" \"}\r\n                      <button\r\n                        className=\"btn btn-outline-primary float-right\"\r\n                        onClick={() => this.onEdit(dispatch)}>\r\n                        <FontAwesomeIcon icon=\"pen\" />\r\n                      </button>\r\n                    </div>\r\n                    <button\r\n                      className=\"btn btn-primary mt-3\"\r\n                      onClick={() => this.props.onNext()}>\r\n                      <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n                      &nbsp; Next\r\n                    </button>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nAPIKey.propTypes = {\r\n  onNext: PropTypes.func.isRequired\r\n};\r\n\r\nexport default APIKey;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StepperHeader = props => {\r\n  return (\r\n    <h4 className=\"border-bottom border-gray pb-2 mb-0\">{props.headerText}</h4>\r\n  );\r\n};\r\n\r\nStepperHeader.propTypes = {\r\n  headerText: PropTypes.string.isRequired\r\n};\r\n\r\nStepperHeader.defaultProps = {\r\n  headerText: \"Step Header Text\"\r\n};\r\n\r\nexport default StepperHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst StepperFooter = props => {\r\n  const {\r\n    nextButtonDisabled,\r\n    nextButtonText,\r\n    previousButtonText,\r\n    resetButtonText,\r\n    onNextClick,\r\n    onPreviousClick,\r\n    onResetClick\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <div className=\"float-left\">\r\n        <button\r\n          className=\"btn btn-secondary mt-3\"\r\n          onClick={() => onPreviousClick()}>\r\n          <FontAwesomeIcon icon=\"arrow-circle-left\" />\r\n          &nbsp; {previousButtonText}\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          disabled={nextButtonDisabled}\r\n          onClick={() => onNextClick()}>\r\n          <FontAwesomeIcon icon=\"arrow-circle-right\" />\r\n          &nbsp; {nextButtonText}\r\n        </button>\r\n      </div>\r\n      <div className=\"float-right\">\r\n        <button\r\n          className=\"btn btn-secondary mt-3 float-right\"\r\n          onClick={() => onResetClick()}>\r\n          <FontAwesomeIcon icon=\"undo-alt\" />\r\n          &nbsp; {resetButtonText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStepperFooter.propTypes = {\r\n  nextButtonDisabled: PropTypes.bool.isRequired,\r\n  nextButtonText: PropTypes.object,\r\n  previousButtonText: PropTypes.string,\r\n  resetButtonText: PropTypes.string,\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nStepperFooter.defaultProps = {\r\n  nextButtonDisabled: false,\r\n  nextButtonText: \"Next\",\r\n  previousButtonText: \"Previous\",\r\n  resetButtonText: \"Start Again\",\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default StepperFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperHeader from \"./StepperHeader\";\r\nimport StepperFooter from \"./StepperFooter\";\r\n\r\nconst StepperContent = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <StepperHeader headerText={props.headerText} />\r\n      <div className=\"my-3\">{props.children}</div>\r\n      <StepperFooter\r\n        nextButtonDisabled={props.isButtonDisabled}\r\n        nextButtonText={props.nextButtonText}\r\n        onNextClick={() => props.onNext()}\r\n        previousButtonText={props.previousButtonText}\r\n        onPreviousClick={() => props.onPrevious()}\r\n        resetButtonText={props.resetButtonText}\r\n        onResetClick={() => props.onReset()}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nStepperContent.propTypes = {\r\n  headerText: PropTypes.string.isRequired,\r\n  isButtonDisabled: PropTypes.bool.isRequired,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func,\r\n  onReset: PropTypes.func,\r\n  nextButtonText: PropTypes.object,\r\n  previousButtonText: PropTypes.string,\r\n  resetButtonText: PropTypes.string\r\n};\r\n\r\nStepperContent.defaultProps = {\r\n  isButtonDisabled: false,\r\n  nextButtonText: \"Next\",\r\n  previousButtonText: \"Previous\",\r\n  resetButtonText: \"Start Again\"\r\n};\r\n\r\nexport default StepperContent;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: this.props.searchTerm\r\n    };\r\n  }\r\n\r\n  onClick = e => {\r\n    const searchTerm = this.searchControl.value;\r\n    if (searchTerm.trim()) {\r\n      this.setState({ query: searchTerm });\r\n      this.props.doSearch(searchTerm);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isSearchProgress, type } = this.props;\r\n\r\n    return (\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"search\"\r\n          placeholder={\"Search for a \" + type}\r\n          className=\"form-control\"\r\n          aria-label=\"Search through Rally\"\r\n          ref={input => (this.searchControl = input)}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          {isSearchProgress ? (\r\n            <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n              <span\r\n                className=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              &nbsp;Loading...\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-primary btn-search\"\r\n              onClick={() => this.onClick(this.props.doSearch)}>\r\n              <FontAwesomeIcon icon=\"search\" />\r\n              &nbsp; Search\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  isSearchProgress: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const { selectedItem, results } = this.props;\r\n    let i = 1;\r\n    const mapResultItem = item => {\r\n      const isActive = selectedItem === item.ref;\r\n      let styling =\r\n        \"list-group-item list-group-item-action\" + (isActive ? \" active\" : \"\");\r\n\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={styling}\r\n          onClick={() => {\r\n            this.props.onSelected(item);\r\n          }}\r\n          key={item.ref + i++}>\r\n          {item.name}\r\n          {isActive ? (\r\n            <span className=\"d-inline-block ml-2\">\r\n              <FontAwesomeIcon icon=\"check-circle\" />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </button>\r\n      );\r\n    };\r\n\r\n    if (results) {\r\n      if (results && results.length) {\r\n        return (\r\n          <div className=\"mt-4\">\r\n            <div className=\"list-group\">{results.map(mapResultItem)}</div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"alert alert-dark mt-4\" role=\"alert\">\r\n            Please do a search to select a team\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return;\r\n  }\r\n}\r\n\r\nResult.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string,\r\n  results: PropTypes.array,\r\n  onSelected: PropTypes.func\r\n};\r\n\r\nResult.defaultProps = {\r\n  type: \"team\",\r\n  selectedItem: null,\r\n  results: [],\r\n  onSelected: () => {}\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Search from \"./Search\";\r\nimport Result from \"./Result\";\r\n\r\nclass SearchContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"\",\r\n      isSearchProgress: false,\r\n      results: props.results || [],\r\n      error: null\r\n    };\r\n  }\r\n\r\n  search = searchTerm => {\r\n    this.setState({\r\n      query: searchTerm,\r\n      isSearchProgress: true,\r\n      error: null\r\n    });\r\n\r\n    this.props\r\n      .doSearch(searchTerm)\r\n      .then(res => {\r\n        this.setState({\r\n          isSearchProgress: false,\r\n          results: res,\r\n          error: null\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isSearchProgress: false,\r\n          results: [],\r\n          error: error\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-container my-3\">\r\n        <Search\r\n          type={this.props.type}\r\n          searchTerm={this.state.query}\r\n          isSearchProgress={this.state.isSearchProgress}\r\n          doSearch={searchTerm => this.search(searchTerm)}\r\n        />\r\n        {this.state.error ? (\r\n          <div className=\"alert alert-danger mt-4\" role=\"alert\">\r\n            {\"Error while importing user stories.\" + this.state.error}\r\n          </div>\r\n        ) : (\r\n          <Result\r\n            key={\"results\" + this.key}\r\n            type={this.props.type}\r\n            selectedItem={this.props.selectedItem}\r\n            results={this.state.results}\r\n            onSelected={selectedItem => this.props.onItemSelected(selectedItem)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchContainer.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nSearchContainer.defaultProps = {\r\n  type: \"team\"\r\n};\r\n\r\nexport default SearchContainer;\r\n","import Axios from \"axios\";\r\n\r\nconst serverUrl = \"https://5c9f5f3c-f925-43b8-8102-d8e834a9160a.mock.pstmn.io\";\r\n\r\nexport const searchTeams = (searchTerm, apiKey) => {\r\n  const teamsUrl = `${serverUrl}/teams/${searchTerm}`;\r\n\r\n  return Axios.get(teamsUrl, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    }\r\n  });\r\n};\r\n\r\nexport const searchUsers = (searchTerm, apiKey) => {\r\n  const ownerUrl = `${serverUrl}/users?displayName=${searchTerm}`;\r\n\r\n  return Axios.get(ownerUrl, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    }\r\n  });\r\n};\r\n\r\nexport const bulkInsertStories = (message, apiKey) => {\r\n  const bulkInsertUrl = `${serverUrl}/userstories/bulkInsert`;\r\n\r\n  return Axios.post(bulkInsertUrl, JSON.stringify(message), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      apiKey: apiKey\r\n    },\r\n    cache: \"no-cache\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport SearchContainer from \"./Search/SearchContainer\";\r\nimport { searchTeams } from \"../serverCall\";\r\n\r\nclass TeamSelection extends Component {\r\n  doTeamSearch = async (searchTerm, apiKey, dispatch) => {\r\n    return searchTeams(searchTerm, apiKey)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        dispatch({ type: \"UPDATE_TEAMS\", payload: res });\r\n        return res;\r\n      });\r\n  };\r\n\r\n  onTeamSelection = (team, dispatch) => {\r\n    dispatch({ type: \"SELECT_TEAM\", payload: team });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { teamId: selectedTeam, dispatch } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const isTeamNotSelected = !(selectedTeam && selectedTeam.ref);\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Your Team\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isTeamNotSelected}>\r\n              <SearchContainer\r\n                key=\"team-search\"\r\n                selectedItem={isTeamNotSelected ? \"\" : selectedTeam.ref}\r\n                doSearch={searchTerm =>\r\n                  this.doTeamSearch(searchTerm, store.apiKey, store.dispatch)\r\n                }\r\n                onItemSelected={team => this.onTeamSelection(team, dispatch)}\r\n              />\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTeamSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nTeamSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default TeamSelection;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport { searchUsers } from \"../serverCall\";\r\nimport Result from \"./Search/Result\";\r\n\r\nclass OwnerSelection extends Component {\r\n  doUserSearch = async (searchTerm, apiKey, dispatch) => {\r\n    return searchUsers(searchTerm, apiKey)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        dispatch({ type: \"UPDATE_USERS\", payload: res });\r\n      });\r\n  };\r\n\r\n  onOwnerSelection = (owner, dispatch) => {\r\n    dispatch({ type: \"SELECT_OWNER\", payload: owner });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            dispatch,\r\n            ownerId: selectedOwner,\r\n            teamId: selectedTeam\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const teamMembers = selectedTeam ? selectedTeam.members : [];\r\n          const isOwnerNotSelected = !(selectedOwner && selectedOwner.ref);\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Owner for User Stories\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isOwnerNotSelected}>\r\n              <Result\r\n                results={teamMembers}\r\n                selectedItem={isOwnerNotSelected ? \"\" : selectedOwner.ref}\r\n                onSelected={item => this.onOwnerSelection(item, dispatch)}\r\n              />\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nOwnerSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nOwnerSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default OwnerSelection;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport Result from \"./Search/Result\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\n\r\nexport class ReleaseSelection extends Component {\r\n  onReleaseSelection = (release, dispatch) => {\r\n    dispatch({ type: \"SELECT_RELEASE\", payload: release });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            dispatch,\r\n            releaseId: selectedRelease,\r\n            teamId: selectedTeam\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const releaseList = selectedTeam ? selectedTeam.releases : [];\r\n          const isReleaseNotSelected = !(\r\n            selectedRelease && selectedRelease.ref\r\n          );\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Select Owner for User Stories\"\r\n              onNext={() => onNextClick()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isReleaseNotSelected}>\r\n              <Result\r\n                results={releaseList}\r\n                selectedItem={isReleaseNotSelected ? \"\" : selectedRelease.ref}\r\n                onSelected={item => this.onReleaseSelection(item, dispatch)}\r\n              />\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nReleaseSelection.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nReleaseSelection.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default ReleaseSelection;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\n\r\nexport class TrelloJsonEntry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      trelloJson: \"\",\r\n      error: null\r\n    };\r\n  }\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      trelloJson: this.trelloJsonControl.value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  saveTrelloJson = (dispatch, onNextClick) => {\r\n    let jsonStr = this.trelloJsonControl.value;\r\n\r\n    if (this.isJsonString(jsonStr)) {\r\n      dispatch({ type: \"UPDATE_JSON\", payload: jsonStr });\r\n      onNextClick();\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a valid JSON String\"\r\n      });\r\n    }\r\n  };\r\n\r\n  isJsonString = str => {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { dispatch } = store;\r\n          const { trelloJson, error } = this.state;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n          const isTrelloJsonEntered =\r\n            trelloJson === null || trelloJson.trim().length === 0;\r\n\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Enter Trello JSON Data\"\r\n              onNext={() => this.saveTrelloJson(dispatch, onNextClick)}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isTrelloJsonEntered}>\r\n              <textarea\r\n                placeholder=\"Enter JSON Data from Trello\"\r\n                className={\"form-control\" + (error ? \" is-invalid\" : \"\")}\r\n                rows=\"10\"\r\n                ref={input => (this.trelloJsonControl = input)}\r\n                onChange={this.handleInputChange}\r\n                aria-label=\"Trello JSON\"\r\n              />\r\n              {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTrelloJsonEntry.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nTrelloJsonEntry.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default TrelloJsonEntry;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepperContent from \"./Stepper/StepperContent\";\r\nimport { Consumer } from \"../context\";\r\nimport { bulkInsertStories } from \"../serverCall\";\r\n\r\nexport class UploadConfirmation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isUploadInprogress: false,\r\n      response: null,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  uploadUserStories = store => {\r\n    const {\r\n      apiKey,\r\n      teamId: selectedTeam,\r\n      ownerId: selectedOwner,\r\n      releaseId: selectedRelease,\r\n      trelloJson\r\n    } = store;\r\n\r\n    const message = {\r\n      teamId: selectedTeam.ref,\r\n      userId: selectedOwner.ref,\r\n      releaseId: selectedRelease.ref,\r\n      trelloJson: trelloJson\r\n    };\r\n\r\n    this.setState({\r\n      isUploadInprogress: true,\r\n      response: null,\r\n      error: null\r\n    });\r\n\r\n    bulkInsertStories(message, apiKey)\r\n      .catch(err =>\r\n        this.setState({\r\n          isUploadInprogress: false,\r\n          response: null,\r\n          error: err\r\n        })\r\n      )\r\n      .then(res => res.data)\r\n      .then(res =>\r\n        this.setState({\r\n          isUploadInprogress: false,\r\n          response: res,\r\n          error: null\r\n        })\r\n      );\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const {\r\n            teamId: selectedTeam,\r\n            ownerId: selectedOwner,\r\n            releaseId: selectedRelease\r\n          } = store;\r\n          const { onNextClick, onPreviousClick, onResetClick } = this.props;\r\n\r\n          const buttonText = () => {\r\n            if (this.state.isUploadInprogress) {\r\n              return (\r\n                <React.Fragment>\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  &nbsp;Loading...\r\n                </React.Fragment>\r\n              );\r\n            } else {\r\n              return \"Import User Stories\";\r\n            }\r\n          };\r\n\r\n          const isButtonDisabled =\r\n            this.state.isUploadInprogress || this.state.response !== null;\r\n          return (\r\n            <StepperContent\r\n              headerText=\"Confirm Information and Upload User Stories\"\r\n              onNext={() => {\r\n                this.uploadUserStories(store);\r\n                onNextClick();\r\n              }}\r\n              nextButtonText={buttonText()}\r\n              onPrevious={() => onPreviousClick()}\r\n              onReset={() => onResetClick()}\r\n              isButtonDisabled={isButtonDisabled}>\r\n              {this.state.error\r\n                ? this.displayErrorMessage(this.state.error)\r\n                : this.state.response\r\n                ? this.displayResponse(this.state.response)\r\n                : this.displaySelectInfo(\r\n                    selectedTeam,\r\n                    selectedOwner,\r\n                    selectedRelease\r\n                  )}\r\n            </StepperContent>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  };\r\n\r\n  displayErrorMessage = error => {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {error}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayResponse = response => {\r\n    return (\r\n      <div className=\"my-3 p-3\">\r\n        {response.createdStories && (\r\n          <ul className=\"list-group\">\r\n            {response.createdStories.map(item =>\r\n              this.displayUserStories(\"success\", item)\r\n            )}\r\n          </ul>\r\n        )}\r\n\r\n        {response.errorStories && (\r\n          <ul className=\"list-group\">\r\n            {response.errorStories.map(item =>\r\n              this.displayUserStories(\"danger\", item)\r\n            )}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayUserStories = (status, userStory) => {\r\n    return (\r\n      <li\r\n        className={\"list-group-item list-group-item-\" + status}\r\n        key={userStory.userStoryId}>\r\n        {userStory.userStoryId + \" - \" + userStory.name}\r\n      </li>\r\n    );\r\n  };\r\n\r\n  displaySelectInfo = (selectedTeam, selectedOwner, selectedRelease) => {\r\n    return (\r\n      <div className=\"my-3 p-3\">\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Team:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedTeam ? selectedTeam.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Owner:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedOwner ? selectedOwner.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n          <div className=\"inline-block font-weight-bold mx-2\">\r\n            Selected Release:{\" \"}\r\n          </div>\r\n          <div className=\"inline-block mx-2\">\r\n            {selectedRelease ? selectedRelease.name : \"(Not Selected)\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nUploadConfirmation.propTypes = {\r\n  onNextClick: PropTypes.func,\r\n  onPreviousClick: PropTypes.func,\r\n  onResetClick: PropTypes.func\r\n};\r\n\r\nUploadConfirmation.defaultPropTypes = {\r\n  onNextClick: () => void 0,\r\n  onPreviousClick: () => void 0,\r\n  onResetClick: () => void 0\r\n};\r\n\r\nexport default UploadConfirmation;\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"bs-stepper\";\r\nimport { Consumer } from \"../context\";\r\nimport APIKey from \"./APIKey\";\r\nimport TeamSelection from \"./TeamSelection\";\r\nimport OwnerSelection from \"./OwnerSelection\";\r\nimport ReleaseSelection from \"./ReleaseSelection\";\r\nimport TrelloJsonEntry from \"./TrelloJsonEntry\";\r\nimport UploadConfirmation from \"./UploadConfirmation\";\r\n\r\nexport class TRStepper extends Component {\r\n  currentStep = 1;\r\n\r\n  componentDidMount() {\r\n    this.stepper = new Stepper(this.stepperContainer, {\r\n      linear: true,\r\n      animation: true\r\n    });\r\n\r\n    this.stepper.to(this.currentStep);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onReset = dispatch => {\r\n    dispatch({ type: \"RESET\" });\r\n    this.stepper.reset();\r\n  };\r\n\r\n  render() {\r\n    const stepHeader = (step, index) => {\r\n      const target = `#test-l-${step.id}`;\r\n\r\n      return (\r\n        <React.Fragment key={target}>\r\n          {index > 0 ? <div className=\"line\" /> : \"\"}\r\n          <div className=\"step\" data-target={target}>\r\n            <button className=\"step-trigger\">\r\n              <span className=\"bs-stepper-circle\">{step.id}</span>\r\n              <span className=\"bs-stepper-label\">{step.text}</span>\r\n            </button>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Consumer>\r\n        {store => {\r\n          const { stateList, currentState, dispatch } = store;\r\n          this.currentStep = currentState;\r\n\r\n          return (\r\n            <div\r\n              id=\"stepper1\"\r\n              className=\"bs-stepper mt-3\"\r\n              ref={input => (this.stepperContainer = input)}>\r\n              <div className=\"bs-stepper-header  rounded shadow-sm\">\r\n                {stateList.map(stepHeader)}\r\n              </div>\r\n              <div className=\"bs-stepper-content my-4 p-3  rounded shadow-sm \">\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div id=\"test-l-1\" className=\"content\">\r\n                    <APIKey onNext={() => this.stepper.next()} />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-2\" className=\"content\">\r\n                    <TeamSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-3\" className=\"content\">\r\n                    <OwnerSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-4\" className=\"content\">\r\n                    <ReleaseSelection\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-5\" className=\"content\">\r\n                    <TrelloJsonEntry\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div id=\"test-l-6\" className=\"content\">\r\n                    <UploadConfirmation\r\n                      onNextClick={() => this.stepper.next()}\r\n                      onPreviousClick={() => this.stepper.previous()}\r\n                      onResetClick={() => this.onReset(dispatch)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TRStepper;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Provider } from \"./context\";\nimport TRStepper from \"./components/TRStepper\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bs-stepper/dist/css/bs-stepper.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <div className=\"App\">\n          <Header />\n          <div role=\"main\" className=\"container\">\n            <TRStepper />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faSearch,\n  faArrowCircleRight,\n  faArrowCircleLeft,\n  faPlusCircle,\n  faPen,\n  faCheckCircle,\n  faUndoAlt\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faSearch,\n  faArrowCircleRight,\n  faArrowCircleLeft,\n  faPlusCircle,\n  faPen,\n  faCheckCircle,\n  faUndoAlt\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}